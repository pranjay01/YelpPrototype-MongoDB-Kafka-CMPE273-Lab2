[2020-11-04 21:58:14,585] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-11-04 21:59:26,691] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-11-04 21:59:26,812] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-11-04 21:59:26,819] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-11-04 21:59:26,835] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-11-04 21:59:26,911] INFO [Controller id=0] Epoch incremented to 1 (kafka.controller.KafkaController)
[2020-11-04 21:59:26,944] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-11-04 21:59:26,984] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-11-04 21:59:26,992] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-11-04 21:59:26,998] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-11-04 21:59:27,106] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-11-04 21:59:27,150] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-11-04 21:59:27,220] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-11-04 21:59:27,239] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-11-04 21:59:27,240] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-11-04 21:59:27,241] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-11-04 21:59:27,241] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-11-04 21:59:27,242] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-11-04 21:59:27,258] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,259] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,260] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-11-04 21:59:27,261] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-11-04 21:59:27,316] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-11-04 21:59:27,317] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-11-04 21:59:27,404] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2020-11-04 21:59:27,406] INFO [RequestSendThread controllerId=0] Controller 0 connected to pranjay-HP-Laptop-15q-bu0xx:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-11-04 21:59:27,427] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-11-04 21:59:27,437] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-11-04 21:59:27,460] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2020-11-04 21:59:27,502] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-11-04 21:59:27,524] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,525] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,526] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,526] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,527] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-11-04 21:59:27,559] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-11-04 21:59:32,576] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-04 21:59:32,590] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-11-04 21:59:43,732] INFO [Controller id=0] New topics: [Set(Customer-requests)], deleted topics: [Set()], new partition replica assignment [Map(Customer-requests-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-04 21:59:43,770] INFO [Controller id=0] New partition creation callback for Customer-requests-0 (kafka.controller.KafkaController)
[2020-11-04 21:59:49,218] INFO [Controller id=0] New topics: [Set(Common-requests)], deleted topics: [Set()], new partition replica assignment [Map(Common-requests-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-04 21:59:49,219] INFO [Controller id=0] New partition creation callback for Common-requests-0 (kafka.controller.KafkaController)
[2020-11-04 21:59:53,932] INFO [Controller id=0] New topics: [Set(Static-requests)], deleted topics: [Set()], new partition replica assignment [Map(Static-requests-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-04 21:59:53,933] INFO [Controller id=0] New partition creation callback for Static-requests-0 (kafka.controller.KafkaController)
