[2020-10-29 02:03:31,999] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:03:32,180] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:03:32,181] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:03:32,181] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:06:25,868] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-10-29 02:06:26,969] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-10-29 02:06:29,022] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-10-29 02:06:29,598] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-10-29 02:06:30,622] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-10-29 02:06:32,107] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-10-29 02:06:32,270] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-10-29 02:06:33,410] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-10-29 02:06:47,050] ERROR [ControllerEventThread controllerId=0] Error processing event RegisterBrokerAndReelect (kafka.controller.ControllerEventManager$ControllerEventThread)
kafka.zookeeper.ZooKeeperClientExpiredException: Session expired either before or while waiting for connection
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply$mcV$sp(ZooKeeperClient.scala:233)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply(ZooKeeperClient.scala:221)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply(ZooKeeperClient.scala:221)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:250)
	at kafka.zookeeper.ZooKeeperClient.kafka$zookeeper$ZooKeeperClient$$waitUntilConnected(ZooKeeperClient.scala:221)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply$mcV$sp(ZooKeeperClient.scala:215)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply(ZooKeeperClient.scala:215)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply(ZooKeeperClient.scala:215)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:250)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:214)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1461)
	at kafka.zk.KafkaZkClient.kafka$zk$KafkaZkClient$$retryRequestUntilConnected(KafkaZkClient.scala:1437)
	at kafka.zk.KafkaZkClient$CheckedEphemeral.create(KafkaZkClient.scala:1482)
	at kafka.zk.KafkaZkClient.checkedEphemeralCreate(KafkaZkClient.scala:1473)
	at kafka.zk.KafkaZkClient.registerBrokerInZk(KafkaZkClient.scala:84)
	at kafka.controller.KafkaController$RegisterBrokerAndReelect$.process(KafkaController.scala:1487)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:68)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2020-10-29 02:06:50,815] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-10-29 02:06:51,289] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-10-29 02:06:51,348] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-10-29 02:06:51,530] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-10-29 02:06:51,629] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-10-29 02:06:53,955] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-10-29 02:06:54,058] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-10-29 02:06:54,351] INFO [Controller id=0] Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2020-10-29 02:06:54,397] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-10-29 02:06:54,592] INFO [Controller id=0] Epoch incremented to 2 (kafka.controller.KafkaController)
[2020-10-29 02:06:54,679] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-10-29 02:06:54,743] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-10-29 02:06:54,904] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-10-29 02:06:55,159] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-10-29 02:06:56,887] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-10-29 02:06:57,531] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-10-29 02:06:58,009] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-10-29 02:06:58,009] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-10-29 02:06:58,354] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-10-29 02:06:58,425] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-10-29 02:06:58,513] INFO [Controller id=0] Current list of topics in the cluster: Set(Restaurant-requests, Customer-requests, response_topic, Common-requests, Static-requests) (kafka.controller.KafkaController)
[2020-10-29 02:06:58,664] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-10-29 02:06:58,925] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-10-29 02:06:59,111] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-10-29 02:06:59,297] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-10-29 02:06:59,465] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-10-29 02:07:01,915] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-10-29 02:07:02,076] INFO [RequestSendThread controllerId=0] Controller 0 connected to pranjay-HP-Laptop-15q-bu0xx:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-10-29 02:07:02,169] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-10-29 02:07:04,551] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=Static-requests,Partition=0,Replica=0] -> OnlineReplica, [Topic=Common-requests,Partition=0,Replica=0] -> OnlineReplica, [Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=Customer-requests,Partition=0,Replica=0] -> OnlineReplica, [Topic=Restaurant-requests,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2020-10-29 02:07:04,809] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-10-29 02:07:04,981] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-10-29 02:07:05,114] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(Customer-requests-0 -> OnlinePartition, Common-requests-0 -> OnlinePartition, Restaurant-requests-0 -> OnlinePartition, Static-requests-0 -> OnlinePartition, response_topic-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2020-10-29 02:07:05,206] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-10-29 02:07:05,417] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-10-29 02:07:05,486] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-10-29 02:07:05,563] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-10-29 02:07:05,610] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-10-29 02:07:05,650] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-10-29 02:07:06,117] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-10-29 02:07:11,260] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:07:11,442] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:07:11,597] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:07:11,659] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:12:11,766] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:12:11,766] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:12:11,767] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:12:11,767] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:17:11,767] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:17:11,780] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:17:11,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:17:11,782] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:22:11,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:22:14,083] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:22:14,084] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:22:14,085] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:27:14,086] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:27:14,121] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:27:14,138] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:27:14,204] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:32:14,204] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:32:14,226] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:32:14,226] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:32:14,226] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:37:14,227] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:37:14,228] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:37:14,229] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:37:14,229] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:42:14,230] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:42:14,259] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:42:14,260] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:42:14,260] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:47:14,261] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:47:14,293] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:47:14,321] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:47:14,405] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:52:14,435] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:52:14,461] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:52:14,475] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:52:14,475] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-10-29 02:57:14,502] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-10-29 02:57:14,503] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(Customer-requests-0 -> Vector(0), Common-requests-0 -> Vector(0), Restaurant-requests-0 -> Vector(0), Static-requests-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-10-29 02:57:14,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-10-29 02:57:14,503] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
